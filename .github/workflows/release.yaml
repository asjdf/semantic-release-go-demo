name: Release
on:
  push:
  workflow_dispatch:

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
      - uses: golangci/golangci-lint-action@v3

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: stable
      - run: go test -v ./...

  release:
    name: semantic-release
    runs-on: ubuntu-22.04
    needs: test
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v3
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19.0.5

  goreleaser:
    name: binary-release
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.new-release-published == 'true'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version: stable
      # More assembly might be required: Docker logins, GPG, etc. It all depends
      # on your needs.
      - uses: goreleaser/goreleaser-action@v4
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}